DATABASE
	rstate(integer,integer)
	
PREDICATES
	state(integer,integer)
	
CLAUSES
	state(2,_).
	
	state(0,0):-
	not(rstate(0,0)),
	assert(rstate(0,0)),
	state(0,0).
	
	state(X,Y):-
	X<4,
	not(rstate(4,Y)),
	assert(rstate(4,Y)),
	write("\n Rule 1 => (4,",Y,")"),
	state(4,Y).
	
	state(X,Y):-
	X<3,
	not(rstate(X,3)),
	assert(rstate(X,3)),
	write("\n Rule 2 => (",X,",3)"),
	state(X,3).
	
	state(X,Y):-
	X>0,
	not(rstate(0,Y)),
	assert(rstate(0,Y)),
	write("\n Rule 3 => (0,",Y,")"),
	state(0,Y).
	
	state(X,Y):-
	Y<3,
	not(rstate(X,0)),
	assert(rstate(X,0)),
	write("\n Rule 4 => (",X,",0)"),
	state(X,0).
	
	state(X,Y):-
	X+Y>=4,
	Y>0,
	Z=Y-(4-X),
	not(rstate(4,Z)),
	assert(rstate(4,Z)),
	write("\n Rule 5 => (4,",Z,")"),
	state(4,Z).
	
	state(X,Y):-
	X+Y>=3,
	X>0,
	Z=Y-(3-X),
	not(rstate(Z,3)),
	assert(rstate(Z,3)),
	write("\n Rule 6 => (",Z,",3)"),
	state(Z,3).
	
	state(X,Y):-
	X+Y<=4,
	Y>0,
	Z=X+Y,
	not(rstate(Z,0)),
	assert(rstate(Z,0)),
	write("\n Rule 7 => (",Z,",0)"),
	state(Z,0).
	
	state(X,Y):-
	X+Y<=3,
	X>0,
	Z=X+Y,
	not(rstate(0,Z)),
	assert(rstate(0,Z)),
	write("\n Rule 8 => (0,",Z,")"),
	state(0,Z).
	

GOAL
	write("Initial State(0,0)");
	state(0,0),
	save("output.txt").
	
	
	
	
	
	
	